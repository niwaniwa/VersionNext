name: "Version Next"
description: "This software automatically calculates the next version from an array of semantic versioning strings, following SemVer rules."
author: "niwaniwa"
# version=1.0.0

inputs:
  version-input:
    description: "An array of semantic versioning strings (e.g., 2.3.1, 2.4.0-rc.1, 2.3.2-beta.1) "
    required: true
    default: ""
  release-type:
    type: choice
    description: "The type of release (none, alpha, beta, rc, or release)"
    required: false
    default: "none"
    options:
      - none
      - alpha
      - beta
      - rc
      - release

outputs:
  next_version:
    description: "The next calculated semantic version."
    value: ${{ steps.get-version.outputs.next_version }}

runs:
  using: "composite"
  steps:
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23.x'

    - name: build
      run: |
        cd ${{ github.action_path }}
        go build -ldflags="-s -w" -o ${{ github.action_path }}/version-next main.go
      shell: bash

    - name: run
      id: get-version
      run: |
        if [ "${{ inputs.release-type }}" != "none" ]; then
          result=$(${{ github.action_path }}/version-next -v ${{ inputs.version-input }} -r ${{ inputs.release-type }})
        else
          result=$(${{ github.action_path }}/version-next -v ${{ inputs.version-input }})
        fi
        echo $result
        echo "next_version=$(echo $result)" >> $GITHUB_OUTPUT
      shell: bash

    - name: Check GITHUB_OUTPUT
      run: cat $GITHUB_OUTPUT
      shell: bash
